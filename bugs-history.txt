bug#0003 - Deducting extra quantity when using Remove.
    Error Message)
        None
    Scenario A)
        item with quantity=2 exists,
        remove item quantity=-1,
        item is deleted.
        frontend:
            X - inventory.data sets item quantity=0
        backend:
            X - item is deleted from database
    Problem)
        
        backend deducts extra quantity when checking item to be deleted. (line 81-107).
    Fixed)
        backend change (line 107) to *[result.quantity <= 0]*.
        frontend inventory.data refresh by getInventory()

bug#0002 - ERROR if item is updated or added with quantity 0:
    Error Message)
        throw new Error('Quantity is 0');
    Scenario A)
        Item with name "Bobby" with expiration "x" already exists.
        add item name "Bobby" with expiration "x" and quantity "0".
        item exists, switching to update
        frontend:
            X - interceptor caught error
        backend:
            X - throw new Error('Quantity is 0');
    Scenario B)
        update item name with quantity "0".
        frontend:
            X - interceptor caught error
        backend:
            X - throw new Error('Quantity is 0');
    Problem)
        end-user is not being notified of the error
        needs frontend validation
    Fixed)
        changed backend quantity throw error with ctx.throw(400, 'Quantity cannot be 0'); for http status.
        errors are rethrown by jwt.interceptor and inventory.service to be displayed by the component.
        end-user is notified if there is an error.
        frontend validation.

bug#0001 - ERROR if new item is added and name already exists:
    Error Message)
        ERROR TypeError: "this.localGroups.find(...) is undefined".
    Scenario A)
        Item with name "Bobby" with group "John" exists.
        add item name "Bobby" with group "John".
        frontend:
            X - ERROR TypeError: "this.localGroups.find(...) is undefined".
        backend:
            O - item still updates with 'inc' quantity option.
    Scenario B)
        Item with name "Bobb" with group "John" exists.
        add item name "Bobby" with group "Default".
        frontend:
            X - ERROR TypeError: "this.localGroups.find(...) is undefined".
        backend:
            O - item still updates with 'inc' quantity option.
            O - item still updates with "Default" group.
    Problem)
        item._id doesn't exists when adding items so it cannot set prevGroup property.
        item.prevGroup is undefined when adding items.
    Fixed)
        find existing item based on (name, expirationDate) then set (prevGroup).
